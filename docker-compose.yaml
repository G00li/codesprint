version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - BACKEND_URL=http://backend:8000
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file: 
      - ./backend/.env
    volumes:
      - ./backend:/app
    depends_on:
      crewai:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 5s
      timeout: 3s
      retries: 10

    restart: unless-stopped

  crewai:
    build:
      context: ./crewai
      dockerfile: Dockerfile
    
    ports:
      - "8004:8004"

    environment:
      - LITELLM_MODEL_NAME=llama3
      - LITELLM_API_BASE=http://ollama:11434
      - LITELLM_API_KEY=dummy
      - LITELLM_PROVIDER=ollama
      
    env_file:
      - ./crewai/.env
    volumes:
      - ./crewai:/app
    depends_on:
      ollama:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 5s
      timeout: 3s
      retries: 10

    # command: tail -f /dev/null
    # restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/version"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped


volumes:
  redis_data:
  ollama_data: